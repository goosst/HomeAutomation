homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret gps_lat
  longitude: !secret gps_long
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Brussels
  # Customization file
  # customize: !include customize.yaml
  auth_providers:
    - type: trusted_networks
      trusted_networks:
        - 192.168.0.0/24
      allow_bypass_login: true
    - type: homeassistant
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

frontend:
  themes: !include themes.yaml

lovelace:
  mode: yaml
# Show the introduction message on startup.
#introduction:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Discover some devices automatically
discovery:

zone:
  - name: Work
    latitude: !secret work_gps_lat
    longitude: !secret work_gps_long
    icon: mdi:worker

media_player:
  - platform: yamaha_musiccast
    host: 192.168.0.163

mqtt:
  broker: 127.0.0.1
  username: stijn
  password: !secret pass_mqtt
  discovery: true

sensor:
  - platform: time_date
    display_options:
      - 'date_time_iso'
  - platform: waze_travel_time
    name: "commute"
    origin: zone.home
    destination: zone.work
    region: 'EU'
    vehicle_type: car
  - platform: yr
    name: weather_yr
    forecast: 24
    monitored_conditions:
      - temperature
      - precipitation
      - windDirection
      - windSpeed
      - symbol
  - platform: mqtt
    name: "Temperature living"
    state_topic: sensor/thermostat/temperature
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Temperature setpoint living"
    state_topic: sensor/thermostat/temperature_set
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Temperature flow radiator"
    state_topic: sensor/thermostat/temperature_flowtemp
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Temperature zolder"
    state_topic: /sensor/ESP8266-452118/data/temperature
    expire_after: 60
    payload_not_available: "temp zolder offline"
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Humidity zolder"
    state_topic: /sensor/ESP8266-452118/data/humidity
    expire_after: 60
    payload_not_available: "humidity zolder offline"
    unit_of_measurement: "%"
  - platform: mqtt
    name: "Robot energy today"
    state_topic: tele/sonoffPowR2/SENSOR
    value_template: "{{ value_json['ENERGY'].Today }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Robot power"
    state_topic: tele/sonoffPowR2/SENSOR
    value_template: "{{ value_json['ENERGY'].Power }}"
    unit_of_measurement: "Watt"
  - platform: mqtt
    name: "Robot total energy"
    state_topic: tele/sonoffPowR2/SENSOR
    value_template: "{{ value_json['ENERGY'].Total }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Robot energy start"
    state_topic: tele/sonoffPowR2/SENSOR
    value_template: "{{ value_json['ENERGY'].TotalStartTime }}"
  - platform: mqtt
    name: "Temperature bathroom"
    state_topic: /sensor/ESP8266-10064964/data/temperature
    expire_after: 60
    payload_not_available: "temp bathroom offline"
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Humidity bathroom"
    state_topic: /sensor/ESP8266-10064964/data/humidity
    expire_after: 60
    payload_not_available: "humidity bathroom offline"
    unit_of_measurement: "%"
  - platform: buienradar
    monitored_conditions:
      - conditioncode
      - conditiondetailed
      - temperature
      - groundtemperature
      - windspeed
      - winddirection
      - rainchance_1d
      - rain_1d
      - precipitation
      - precipitation_forecast_average
      - irradiance
      - symbol

shell_command:
  set_temp_high: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_temperature.py -t {{ states.input_number.slider_day.state }}'
  set_temp_low: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_temperature.py -t {{ states.input_number.slider_night.state }}'
  read_ebus: 'python3 /home/homeassistant/.homeassistant/python_scripts/read_ebus.py'
  set_temp_living: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_temperature.py -t {{ states.input_number.slider1.state }}'
  set_time: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_time_normal.py'
  set_heater: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_heater.py'
  take_screenshot: 'python3 /home/homeassistant/.homeassistant/python_scripts/db_plotter.py -s {{ states.input_number.dummy_epaper.state }}'
  # start_ebus: 'python3 /home/homeassistant/.homeassistant/python_scripts/start_ebus.py'

history_graph:
  gr1:
    name: temperature living
    entities:
      - sensor.temperature_setpoint_living
      - sensor.temperature_living
    hours_to_show: 72
    refresh: 300
  gr2:
    name: temperature heater
    entities:
      - sensor.temperature_flow_radiator
    hours_to_show: 72
    refresh: 600
  gr3:
    name: power robot
    entities:
      - sensor.robot_power
    hours_to_show: 72
    refresh: 300
  # gr4:
  #   name: temperature zolder
  #   entities:
  #     - sensor.temperature_zolder
  #   hours_to_show: 120
  #   refresh: 300
  # gr5:
  #   name: vochtigheid zolder
  #   entities:
  #     - sensor.humidity_zolder
  #   hours_to_show: 72
  #   refresh: 300

input_number:
  slider1:
    name: Set Now
    initial: 21
    min: 5
    max: 30
    step: 0.25
    unit_of_measurement: "°C"
  slider_night:
    name: Temp Night
    initial: 15
    min: 5
    max: 23
    step: 0.25
    unit_of_measurement: "°C"
  slider_day:
    name: Temp Day
    initial: 21
    min: 5
    max: 25
    step: 0.25
    unit_of_measurement: "°C"
  dummy_epaper:
    name: dummy epaper
    initial: 2
    min: 1
    max: 7
    step: 1

switch:
  - platform: mqtt
    name: "handdoekdroger control"
    command_topic: cmnd/sonoff/Power1
    payload_on: "ON"
    payload_off: "OFF"
  - platform: mqtt
    name: "robomow control"
    command_topic: cmnd/sonoffPowR2/Power1
    payload_on: "ON"
    payload_off: "OFF"

binary_sensor:
  - platform: mqtt
    name: "heater status"
    state_topic: 'tele/sonoff/STATE'
    value_template: "{{value_json.POWER}}"
    availability_topic: "tele/sonoff/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "robot status"
    state_topic: 'tele/sonoffPowR2/STATE'
    value_template: "{{value_json.POWER}}"
    availability_topic: "tele/sonoffPowR2/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "Alarm state"
    state_topic: /sensor/ESP8266-452118/data/alarm #%state_topic: sensor/alarm
    payload_on: 0
    payload_off: 1
    #payload_not_available: "alarm offline"

automation theme_selector:
  - alias: 'Set theme at startup'
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: frontend.set_theme
        data:
          name: slate

automation epaper:
  - alias: epaper
    trigger:
      platform: time_pattern
      minutes: '/5'
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.dummy_epaper
          value: >
            {% if now().hour < 8 %} 2
            {% else %} 1 {% endif %}
      - delay: '00:01:00'
      - service: shell_command.take_screenshot

automation epaper_two:
  - alias: epaper
    trigger:
      platform: time_pattern
      minutes: '/15'
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.dummy_epaper
          value: >
            {% if now().hour < 8 %} 5
            {% elif 8 <= now().hour < 20 %} 5
            {% else %} 5 {% endif %}
      - delay: '00:01:00'
      - service: shell_command.take_screenshot

automation bathroom_heater:
  - alias: handdoekdroger automatisch
    trigger:
      platform: time_pattern
      minutes: '/6'
    condition:
      condition: and
      conditions:
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
        - condition: state #in case it was turned on from the bathroom
          entity_id: switch.handdoekdroger_control
          state: 'off'
    action:
      service: shell_command.set_heater #time to turn on is defined in python script

automation slider:
  - alias: set_temperature_living
    trigger:
      platform: state
      entity_id: input_number.slider1
    action:
      service: shell_command.set_temp_living

automation alarm:
  - alias: heating off when turning alarm on
    trigger:
      platform: state
      entity_id: binary_sensor.alarm_state
      from: 'off' #1 means alarm is off (somebody home)
      to: 'on'
    action:
      - service: shell_command.set_temp_low
        data:
          message: "Leaving home: heating off"
      - delay: '00:01:00'
      - service: shell_command.read_ebus

automation alarm2:
  - alias: heating on when turning alarm off
    trigger:
      platform: state
      entity_id: binary_sensor.alarm_state
      from: 'on'
      to: 'off'
    action:
      - service: shell_command.set_temp_high
        data:
          message: "Coming home: heating on"
      - delay: '00:01:00'
      - service: shell_command.read_ebus
# automation leaving_house:
#   alias: set temp low when leaving house
#   trigger:
#     platform: state
#     entity_id: device_tracker.7c_7d_3d_ba_ef_be
#     from: 'home'
#     to: 'not_home'
#   action:
#     service: shell_command.set_temp_low
#     data:
#       message: "Stijn left house: heating low"

# automation at_home_weekday:
#   alias: set temp high when being home workday
#   trigger:
#     platform: time_pattern
#     minutes: '/5'
#   condition:
#     condition: and
#     conditions:
#       - condition: time
#         after: '06:30:00'
#         before: '22:30:00'
#       - condition: state
#         entity_id: device_tracker.7c_7d_3d_ba_ef_be
#         state: 'home'
#       - condition: time
#         weekday:
#           - mon
#           - tue
#           - wed
#           - thu
#           - fri
#   action:
#     service: shell_command.set_temp_high
#     data:
#       message: "Stijn is home: heating high"

# automation at_home_weekend:
#   alias: set temp high when being home weekend
#   trigger:
#     platform: time_pattern
#     minutes: '/5'
#   condition:
#     condition: and
#     conditions:
#       - condition: time
#         after: '08:00:00'
#         before: '23:00:00'
#       - condition: state
#         entity_id: device_tracker.7c_7d_3d_ba_ef_be
#         state: 'home'
#       - condition: time
#         weekday:
#           - sat
#           - sun
#   action:
#     service: shell_command.set_temp_high
#     data:
#       message: "Stijn is home: heating high"

# automation sleep:
#   alias: sleep, turn heating down
#   trigger:
#     platform: time
#     at: '22:35:00'
#   action:
#     service: shell_command.set_temp_low
#     data:
#       message: "sleeping, heating low"

automation wakeup_week:
  alias: wakup, turn heating up weekday
  trigger:
    platform: time
    at: '06:25:00'
  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    service: shell_command.set_temp_high
    data:
      message: "wakeup, heating high"

automation wakeup_satur:
  alias: wakup, turn heating up saturday
  trigger:
    platform: time
    at: '07:35:00'
  condition:
    - condition: time
      weekday:
        - sat
  action:
    service: shell_command.set_temp_high
    data:
      message: "wakeup, heating high"

automation wakeup_sunday:
  alias: wakup, turn heating up sunday
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    - condition: time
      weekday:
        - sun
  action:
    service: shell_command.set_temp_high
    data:
      message: "wakeup, heating high"

automation ebusreading:
  alias: read ebus
  trigger:
    platform: time_pattern
    minutes: '/5'
  action:
    service: shell_command.read_ebus
    data:
      message: "thermostat reading"


#NMAP is unreliable without scan_options
device_tracker:
  - platform: nmap_tracker
    hosts: 192.168.0.1-254
    consider_home: 600
    interval_seconds: 180
    scan_options: " -min-rtt-timeout 3s " #scan_options: " -min-rtt-timeout 3s --privileged -sP "



recorder:
 purge_keep_days: 15
 exclude:
   # domains:
   #   - automation
   entities:
     - sensor.weather_yr_wind_speed
     - sensor.weather_yr_wind_direction
     - sensor.weather_yr_symbol
     - sensor.br_wind_direction
     - sensor.br_symbol
     - sensor.br_rainchance_1d
     - sensor.br_rain_1d
     - sensor.br_precipitation_forecast_average
     - sensor.br_irradiance
     - sensor.br_detailed_condition
     - sensor.br_condition_code
     - media_player.living_main
     - media_player.kodi_libreelec_local
     - weather.home
     - zone.home
     - sun.sun
#group: !include groups.yaml
#automation: !include automations.yaml
#script: !include scripts.yaml
