homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret gps_lat
  longitude: !secret gps_long
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Brussels
  # Customization file
  # customize: !include customize.yaml
  auth_providers:
    - type: trusted_networks
      trusted_networks:
        - 192.168.0.0/24
      allow_bypass_login: true
    - type: homeassistant
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# octoprint:
#   host: 192.168.0.210:5000
#   api_key: 710C8941F56F43F8867677AA5FD4569D
#   bed: true


logger:
  default: warn

frontend:
  themes: !include themes.yaml

lovelace:
  mode: yaml
# Show the introduction message on startup.
#introduction:

# Discover some devices automatically
discovery:

# tradfri:
#   host: 192.168.0.110

solaredge:
  api_key: !secret solaredge_api
  site_id: !secret solaredge_ID

# neato:
#   username: !secret neato_username
#   password: !secret neato_password

zone:
  - name: Work
    latitude: !secret work_gps_lat
    longitude: !secret work_gps_long
    icon: mdi:worker

media_player:
  - platform: yamaha_musiccast
    host: 192.168.0.164

mqtt:
  broker: 127.0.0.1
  username: stijn
  password: !secret pass_mqtt
  discovery: false

sensor:
  - platform: time_date
    display_options:
      - 'date_time_iso'
  - platform: time_date
    display_options:
      - 'date_time'
  - platform: waze_travel_time
    name: "commute"
    origin: zone.home
    destination: zone.work
    region: 'EU'
    vehicle_type: car
  - platform: mqtt
    name: "Temperature living"
    state_topic: sensor/thermostat/temperature
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Temperature setpoint living"
    state_topic: sensor/thermostat/temperature_set
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Temperature flow radiator"
    state_topic: sensor/thermostat/temperature_flowtemp
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Temperature zolder"
    state_topic: /sensor/ESP8266-452118/data/temperature
    expire_after: 240
    payload_not_available: "temp zolder offline"
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Humidity zolder"
    state_topic: /sensor/ESP8266-452118/data/humidity
    expire_after: 240
    payload_not_available: "humidity zolder offline"
    unit_of_measurement: "%"
  - platform: mqtt
    name: "Robot energy today"
    state_topic: tele/sonoffPowR2/SENSOR
    value_template: "{{ value_json['ENERGY'].Today }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Robot power"
    state_topic: tele/sonoffPowR2/SENSOR
    value_template: "{{ value_json['ENERGY'].Power }}"
    unit_of_measurement: "Watt"
  - platform: mqtt
    name: "Robot total energy"
    state_topic: tele/sonoffPowR2/SENSOR
    value_template: "{{ value_json['ENERGY'].Total }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Robot energy start"
    state_topic: tele/sonoffPowR2/SENSOR
    value_template: "{{ value_json['ENERGY'].TotalStartTime }}"
  - platform: mqtt
    name: "Temperature bathroom"
    state_topic: tele/wemos_d1_bath/SENSOR
    value_template: "{{ value_json['SHT3X-0x45'].Temperature }}"
    expire_after: 800
    payload_not_available: "temp bathroom offline"
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Humidity bathroom"
    state_topic: tele/wemos_d1_bath/SENSOR
    value_template: "{{ value_json['SHT3X-0x45'].Humidity }}"
    expire_after: 800
    payload_not_available: "humidity bathroom offline"
    unit_of_measurement: "%"
  - platform: mqtt
    name: "Temperature slaapkamer"
    state_topic: tele/wemos_d1/SENSOR
    value_template: "{{ value_json['SHT3X-0x45'].Temperature }}"
    expire_after: 800
    payload_not_available: "temp slaapkamer offline"
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Humidity slaapkamer"
    state_topic: tele/wemos_d1/SENSOR
    value_template: "{{ value_json['SHT3X-0x45'].Humidity }}"
    expire_after: 800
    payload_not_available: "humidity slaapkamer offline"
    unit_of_measurement: "%"
  - platform: buienradar
    monitored_conditions:
      - conditioncode
      - conditiondetailed
      - temperature
      - groundtemperature
      - windspeed
      - winddirection
      - rainchance_1d
      - rain_1d
      - precipitation
      - precipitation_forecast_average
      - irradiance
      - symbol
  - platform: mqtt
    name: "Water level current"
    state_topic: tele/water_D9C32C/SENSOR
    value_template: "{{ value_json['INA219'].Current }}"
    expire_after: 864000
    unit_of_measurement: "A"
    availability_topic: "tele/water_D9C32C/LWT"
    payload_available: "Online"
    payload_not_available: "water level sensor offline"
  - platform: mqtt
    name: "Water level voltage"
    state_topic: tele/water_D9C32C/SENSOR
    value_template: "{{ value_json['INA219'].Voltage }}"
    expire_after: 864000
    unit_of_measurement: "V"
    availability_topic: "tele/water_D9C32C/LWT"
    payload_available: "Online"
    payload_not_available: "water level sensor offline"
  # - platform: mqtt
  #   name: "Waterlevel"
  #   state_topic: cmnd/water/waterlevel
  #   expire_after: 864000
  #   payload_not_available: "water level sensor offline"
  #   unit_of_measurement: "m"
  - platform: mqtt
    name: "MailBox"
    state_topic: /sensor/ESP8266-6857171/data/distance
    expire_after: 14400
    unit_of_measurement: "mm"
    payload_available: "Online"
    payload_not_available: "Mailbox sensor Offline"
  - platform: mqtt
    name: "acceleration_Z"
    state_topic: /sensor/ESP8266-14271276/data/accz
    expire_after: 10
    payload_not_available: "acc z offline"
    unit_of_measurement: "%"
  - platform: mqtt
    name: "acceleration_x"
    state_topic: /sensor/ESP8266-14271276/data/accx
    expire_after: 10
    payload_not_available: "acc x offline"
    unit_of_measurement: "%"
  - platform: mqtt
    name: "acceleration_y"
    state_topic: /sensor/ESP8266-14271276/data/accy
    expire_after: 10
    payload_not_available: "acc y offline"
    unit_of_measurement: "%"
  - platform: mqtt
    name: "position_x"
    state_topic: octoPrint/event/PositionUpdate
    value_template: "{{ value_json['x'] }}"
    expire_after: 120
    payload_not_available: "pos x offline"
    unit_of_measurement: "mm"
  - platform: mqtt
    name: "position_y"
    state_topic: octoPrint/event/PositionUpdate
    value_template: "{{ value_json['y'] }}"
    expire_after: 120
    payload_not_available: "pos y offline"
    unit_of_measurement: "mm"
  - platform: mqtt
    name: "position_z"
    state_topic: octoPrint/event/PositionUpdate
    value_template: "{{ value_json['z'] }}"
    expire_after: 120
    payload_not_available: "pos z offline"
    unit_of_measurement: "mm"
  - platform: mqtt
    name: "zoldernok temp"
    state_topic: tele/zolder_B5AEF2/SENSOR
    value_template: "{{ value_json['Temperature'] }}"
    expire_after: 120
    payload_not_available: "temp zoldernok"
    unit_of_measurement: "C"
  - platform: mqtt
    name: "Car energy today"
    state_topic: tele/athom1_044E3E/SENSOR
    value_template: "{{ value_json['ENERGY'].Today }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Car power"
    state_topic: tele/athom1_044E3E/SENSOR
    value_template: "{{ value_json['ENERGY'].Power }}"
    unit_of_measurement: "Watt"
  - platform: mqtt
    name: "Car total energy"
    state_topic: tele/athom1_044E3E/SENSOR
    value_template: "{{ value_json['ENERGY'].Total }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Athom2 energy today"
    state_topic: tele/athom2_045BCE/SENSOR
    value_template: "{{ value_json['ENERGY'].Today }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Athom2 power"
    state_topic: tele/athom2_045BCE/SENSOR
    value_template: "{{ value_json['ENERGY'].Power }}"
    unit_of_measurement: "Watt"
  - platform: mqtt
    name: "Athom2 total energy"
    state_topic: tele/athom2_045BCE/SENSOR
    value_template: "{{ value_json['ENERGY'].Total }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Temperature setpoint zolder"
    state_topic: sensor/thermostat/temperature_zolder_set
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Temperature zolder vaillant"
    state_topic: sensor/thermostat/temperature_zolder_vaillant
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Temperature buiten vaillant"
    state_topic: sensor/thermostat/temperature_outside_vaillant
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Temperature setp flow zolder"
    state_topic: sensor/thermostat/temperature_flowtemp_zolder_set
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Temperature flow"
    state_topic: sensor/thermostat/temperature_flow
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Temperature flow zolder"
    state_topic: sensor/thermostat/temperature_flowtemp_zolder
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "Pressure boiler"
    state_topic: sensor/thermostat/pressure_vaillant
    unit_of_measurement: "Bar"    
  # - platform: solaredge_local
    # ip_address: 192.168.0.107
# - platform: mqtt
#   name: "Temperature slaapkamer"
#   state_topic: /sensor/ESP8266-1095942/data/temperature
#   expire_after: 240
#   payload_not_available: "temp slaapkamer offline"
#   unit_of_measurement: "°C"
# - platform: mqtt
#   name: "Humidity slaapkamer"
#   state_topic: /sensor/ESP8266-1095942/data/humidity
#   expire_after: 240
#   payload_not_available: "humidity slaapkamer offline"
#   unit_of_measurement: "%"

shell_command:
  set_temp_high: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_temperature.py -t {{ states.input_number.slider_day.state }}'
  set_temp_low: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_temperature.py -t {{ states.input_number.slider_night.state }}'
  read_ebus: 'python3 /home/homeassistant/.homeassistant/python_scripts/read_ebus.py'
  set_temp_living: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_temperature.py -t {{ states.input_number.slider1.state }}'
  set_time: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_time_normal.py'
  set_heater: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_heater.py'
  take_screenshot: 'python3 /home/homeassistant/.homeassistant/python_scripts/db_plotter.py -s {{ states.input_number.dummy_epaper.state | float }}'
  lights_living: 'python3 /home/homeassistant/.homeassistant/python_scripts/lights_living.py'
  music_bluetooth_connect: 'python3 /home/homeassistant/.homeassistant/python_scripts/music_initialize.py'
  music_bluetooth_pause: 'python3 /home/homeassistant/.homeassistant/python_scripts/music_pause.py'
  music_bluetooth_resume: 'python3 /home/homeassistant/.homeassistant/python_scripts/music_resume.py'
  mailboxstate: 'python3 /home/homeassistant/.homeassistant/python_scripts/mailboxstate.py'
  octoprint: 'python3 /home/homeassistant/.homeassistant/python_scripts/octoprint.py'
  alarm_clock_actions: 'python3 /home/homeassistant/.homeassistant/python_scripts/alarm_clock_actions.py'
  set_temp_zolder_high: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_temp_zolder.py -t {{ states.input_number.slider_floor_day.state }}'
  set_temp_zolder_low: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_temp_zolder.py -t {{ states.input_number.slider_floor_night.state }}'
  set_temp_zolder: 'python3 /home/homeassistant/.homeassistant/python_scripts/set_temp_zolder.py -t {{ states.input_number.slider_floor_now.state }}'

  # start_ebus: 'python3 /home/homeassistant/.homeassistant/python_scripts/start_ebus.py'


input_number:
  slider1:
    name: Set Now
    initial: 21
    min: 9
    max: 25
    step: 0.25
    unit_of_measurement: "°C"
  slider_night:
    name: Temp Night
    initial: 15
    min: 9
    max: 25
    step: 0.25
    unit_of_measurement: "°C"
  slider_day:
    name: Temp Day
    initial: 21
    min: 9
    max: 25
    step: 0.25
    unit_of_measurement: "°C"
  dummy_epaper:
    name: dummy epaper
    initial: 2
    min: 1
    max: 7
    step: 1
  mailboxfull:
    name: Mailbox
    initial: 2
    min: 0
    max: 2
    step: 1
  slider_floor_now:
    name: Set Temp Zolder
    initial: 19
    min: 5
    max: 25
    step: 0.25
    unit_of_measurement: "°C"
  slider_floor_night:
    name: Temp Zolder Night
    initial: 9
    min: 5
    max: 25
    step: 0.25
    unit_of_measurement: "°C"
  slider_floor_day:
    name: Temp Zolder Day
    initial: 12
    min: 5
    max: 25
    step: 0.25
    unit_of_measurement: "°C"

input_boolean:
  turn_heating_on:
    name: Heating Living Day
    initial: off
  ventilator_radiator:
    name: Dummy ventilator radiator
    initial: off
  start_bluetooth_speaker:
    name: start bluetooth speaker
    initial: off
  pause_bluetooth_speaker:
    name: pause bluetooth speaker
    initial: off
  print_cancel:
    name: cancel print
    initial: off
  print_pause_cyclic:
    name: print pause cyclic
    initial: off
  turn_heating_zolder_on:
    name: Heating Zolder
    initial: off

input_select:
  led_printer:
    name: led printer
    options:
      - On
      - Off
      - Automatic
    initial: Off

switch:
  - platform: mqtt
    name: "handdoekdroger control"
    command_topic: cmnd/s26_bath/Power1
    state_topic: stat/s26_bath/POWER
    payload_on: "ON"
    payload_off: "OFF"
  - platform: mqtt
    name: "robomow control"
    command_topic: cmnd/sonoffPowR2/Power1
    state_topic: stat/sonoffPowR2/POWER
    payload_on: "ON"
    payload_off: "OFF"
  - platform: mqtt
    name: "ventilator control"
    command_topic: cmnd/sonoff_vent/Power1
    state_topic: stat/sonoff_vent/POWER
    payload_on: "ON"
    payload_off: "OFF"
    availability_topic: "tele/sonoff_vent/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"    
  - platform: mqtt
    name: "S26 control"
    command_topic: cmnd/sonoff_s26/POWER
    state_topic: stat/sonoff_s26/POWER
    payload_on: "ON"
    payload_off: "OFF"
    availability_topic: "tele/sonoff_s26/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "S20 control"
    command_topic: cmnd/s20/Power1
    state_topic: stat/s20/POWER
    payload_on: "ON"
    payload_off: "OFF"
    availability_topic: "tele/s20/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "zolder licht"
    command_topic: cmnd/zolder_B5AEF2/Power1
    state_topic: stat/zolder_B5AEF2/POWER
    availability_topic: "tele/zolder_B5AEF2/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "verlichting terras"
    command_topic: cmnd/tuinverlichting/Power1
    state_topic: stat/tuinverlichting/POWER
    payload_on: "ON"
    payload_off: "OFF"
    availability_topic: "tele/tuinverlichting/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "balco 1"
    command_topic: cmnd/tasmota_balco_1/Power1
    state_topic: stat/tasmota_balco_1/POWER
    payload_on: "ON"
    payload_off: "OFF"
    availability_topic: tele/tasmota_balco_1/LWT
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "balco 2"
    command_topic: cmnd/balco2_7ED98F/Power1
    state_topic: stat/balco2_7ED98F/POWER
    payload_on: "ON"
    payload_off: "OFF"
    availability_topic: tele/balco2_7ED98F/LWT
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: command_line
    switches:
      vlc:
        command_on: "cvlc --no-video http://192.168.0.205:8123/local/test.mp3 &"
        command_off: "pkill vlc"
  - platform: mqtt
    name: "athom car"
    command_topic: cmnd/athom1_044E3E/Power1
    state_topic: stat/athom1_044E3E/POWER
    payload_on: "ON"
    payload_off: "OFF"
    availability_topic: tele/athom1_044E3E/LWT
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "athom 2"
    command_topic: cmnd/athom2_045BCE/Power1
    state_topic: stat/athom2_045BCE/POWER
    payload_on: "ON"
    payload_off: "OFF"
    availability_topic: tele/athom1_044E3E/LWT
    payload_available: "Online"
    payload_not_available: "Offline"

binary_sensor:
  - platform: mqtt
    name: "heater status"
    state_topic: 'tele/sonoff/STATE'
    value_template: "{{value_json.POWER}}"
    availability_topic: "tele/sonoff/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "robot status"
    state_topic: 'tele/sonoffPowR2/STATE'
    value_template: "{{value_json.POWER}}"
    availability_topic: "tele/sonoffPowR2/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "Alarm state"
    state_topic: /sensor/ESP8266-452118/data/alarm #%state_topic: sensor/alarm
    payload_on: 0
    payload_off: 1
    #payload_not_available: "alarm offline"

input_text:
  text1:
    name: music file
    initial: Name of music file

webostv:
  host: 192.168.0.136
  name: Living Room TV

shopping_list:
# all automations are below

automation theme_selector:
  - alias: 'Set theme at startup'
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: frontend.set_theme
        data:
          name: stell_blue_with_colors

# if powerfailure occurs of the grid, garden lights turn on
automation start_tuinverlichting:
  - alias: 'turn off tuinverlichting at startup'
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.verlichting_terras

automation MailBox:
  - alias: MailBox
    trigger:
      platform: template
      value_template: "{{ (states.sensor.date_time.last_changed - states.sensor.mailbox.last_updated).total_seconds() > 30 }}"
    action:
      service: shell_command.mailboxstate

automation turn_heating_on_living:
  - alias: 'turn heating living on'
    trigger:
      platform: state
      entity_id: input_boolean.turn_heating_on
      from: 'off'
      to: 'on'
    action:
      - service: shell_command.set_temp_high
        data:
          message: "Turned living heating on"
      - delay: '00:01:00'
      - service: shell_command.read_ebus

automation turn_heating_off_living:
  - alias: 'turn heating living off'
    trigger:
      platform: state
      entity_id: input_boolean.turn_heating_on
      from: 'on'
      to: 'off'
    action:
      - service: shell_command.set_temp_low
        data:
          message: "Turned living heating off"
      - delay: '00:01:00'
      - service: shell_command.read_ebus

automation turn_heating_on_zolder:
  - alias: 'turn heating living on'
    trigger:
      platform: state
      entity_id: input_boolean.turn_heating_zolder_on
      from: 'off'
      to: 'on'
    action:
      - service: shell_command.set_temp_zolder_high
        data:
          message: "Turned living zolder on"
      - delay: '00:01:00'
      - service: shell_command.read_ebus

automation turn_heating_off_living:
  - alias: 'turn heating living off'
    trigger:
      platform: state
      entity_id: input_boolean.turn_heating_zolder_on
      from: 'on'
      to: 'off'
    action:
      - service: shell_command.set_temp_zolder_low
        data:
          message: "Turned living heating off"
      - delay: '00:01:00'
      - service: shell_command.read_ebus

automation turn_on_dummy_ventilator:
  - alias: 'dummy ventilator variable on'
    trigger:
      platform: numeric_state
      entity_id: sensor.temperature_flow_radiator
      above: 89
    action:
       service: input_boolean.turn_on
       data:
         entity_id: input_boolean.ventilator_radiator

automation turn_off_dummy_ventilator:
  - alias: 'dummy ventilator variable off'
    trigger:
      platform: numeric_state
      entity_id: sensor.temperature_flow_radiator
      below: 85
    action:
       service: input_boolean.turn_off
       data:
         entity_id: input_boolean.ventilator_radiator

automation turn_on_ventilator:
  - alias: 'start ventilator radiator'
    trigger:
      platform: state
      entity_id: input_boolean.ventilator_radiator
      from: 'off'
      to: 'on'
    action:
      - delay: '00:10:00'
      - service: switch.turn_on
        data:
          entity_id: switch.s26_control

automation turn_off_ventilator:
  - alias: 'stop ventilator radiator'
    trigger:
      platform: state
      entity_id: input_boolean.ventilator_radiator
      from: 'on'
      to: 'off'
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.s26_control

automation 3dprinter:
  - alias: 3dprinter
    trigger:
      platform: time_pattern
      seconds: '/30'
    action:
      - service: shell_command.octoprint

automation epaper:
  - alias: epaper
    trigger:
      platform: time_pattern
      minutes: '/5'
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.dummy_epaper
          value: >
            {% if now().hour < 9 %} 2
            {% elif 9 <= now().hour < 19 %} 1
            {% else %} 6 {% endif %}
      - delay: '00:01:00'
      - service: shell_command.take_screenshot



automation epaper_two:
  - alias: epaper
    trigger:
      platform: time_pattern
      minutes: '/6'
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.dummy_epaper
          value: >
            {% if now().hour < 8 %} 5
            {% elif 8 <= now().hour < 18 %} 5
            {% else %} 7 {% endif %}
      - delay: '00:01:00'
      - service: shell_command.take_screenshot

automation bathroom_heater:
  - alias: handdoekdroger automatisch
    trigger:
      platform: time_pattern
      minutes: '/5'
    condition:
      condition: and
      conditions:
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
    action:
      service: shell_command.set_heater #time to turn on is defined in python script

automation livingroom_alarm:
  - alias: gsm-alarm verwarming living
    trigger:
      platform: time_pattern
      minutes: '/4'
    condition:
      condition: and
      conditions:
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
    action:
      service: shell_command.alarm_clock_actions #time to turn on is defined in python script

# set temperature when slider changes
automation slider:
  - alias: set_temperature_living
    trigger:
      platform: state
      entity_id: input_number.slider1
    action:
      service: shell_command.set_temp_living

automation slider_zolder:
  - alias: set_temperature_zolder
    trigger:
      platform: state
      entity_id: input_number.slider_floor_now
    action:
      service: shell_command.set_temp_zolder      
# automation clock:
#   - alias: heating on x minutes before phone alarm
#     trigger:
#       - platform: time_pattern
#         minutes: /1
#         seconds: 0
#     condition:
#     - condition: template
#       value_template: '{{ (((as_timestamp(now()) | int) + 55*60) | timestamp_custom("%Y-%m-%d %H:%M:00")) == states.sensor.next_alarm.state }}'
#     action:
#     - service: shell_command.set_temp_high
#       data:
#         message: "Phone alarm - heating on"
#     - delay: '00:35:00'
#     - service: shell_command.set_temp_low
input_datetime:
  next_alarm:
    name: Next scheduled alarm
    has_date: true
    has_time: true
# automation clock_:
#   - alias: heating on x minutes before phone alarm
#     trigger:
#       platform: template
#       value_template: "{{ ((as_timestamp(states('sensor.date_time').replace(',','')) | int) + 55*60) == (state_attr('input_datetime.next_alarm', 'timestamp') | int)  }}"
#     action:
#     - service: input_boolean.turn_on
#       entity_id: input_boolean.turn_heating_on
#     - delay: '00:35:00'
#     - service: input_boolean.turn_off
#       entity_id: input_boolean.turn_heating_on

automation lights_start_watch_tv:
  - alias: lights_start_tv
    trigger:
      platform: state
      entity_id: media_player.living_room_main
      to: 'off'
    action:
      - service: shell_command.lights_living

automation lights_start_watch_tv2:
  - alias: lights_start_tv2
    trigger:
      platform: template
      value_template: "{{ is_state_attr('media_player.living_room_main', 'source', 'tv') }}"
    action:
      - service: shell_command.lights_living

automation lights_start_watch_tv3:
  - alias: lights_start_tv2
    trigger:
      platform: template
      value_template: "{{ is_state_attr('media_player.living_room_main', 'source', 'bluetooth') }}"
    action:
      - service: shell_command.lights_living

automation lights_stop_watch_tv:
  - alias: lights_stop_tv
    trigger:
      platform: state
      entity_id: media_player.living_room_main
      to: 'idle'
    action:
      - service: shell_command.lights_living


# automation alarm:
#   - alias: heating off when turning alarm on
#     trigger:
#       platform: state
#       entity_id: binary_sensor.alarm_state
#       from: 'off' #1 means alarm is off (somebody home)
#       to: 'on'
#     action:
#       - service: shell_command.set_temp_low
#         data:
#           message: "Leaving home: heating off"
#       - delay: '00:01:00'
#       - service: shell_command.read_ebus

automation alarm_:
  - alias: heating off when turning alarm on
    trigger:
      platform: state
      entity_id: binary_sensor.alarm_state
      from: 'off' #1 means alarm is off (somebody home)
      to: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.turn_heating_on

# automation alarm2:
#   - alias: heating on when turning alarm off
#     trigger:
#       platform: state
#       entity_id: binary_sensor.alarm_state
#       from: 'on'
#       to: 'off'
#     action:
#       - service: shell_command.set_temp_high
#         entity_id: input_boolean.turn_on
#         data:
#           message: "Coming home: heating on"
#       - delay: '00:01:00'
#       - service: shell_command.read_ebus

automation alarm2_:
  - alias: heating on when turning alarm off
    trigger:
      platform: state
      entity_id: binary_sensor.alarm_state
      from: 'on'
      to: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.turn_heating_on

automation pomp_checks:
  - alias: periodic run pump
    trigger:
      - platform: time
        at: '9:00:00'
    action:
      - service: switch.turn_on
        entity_id: switch.s26_control
      - delay: '00:05:00'
      - service: switch.turn_off
        entity_id: switch.s26_control

automation switches_dagtarief_schakel_uit:
  - alias: sonoff switches nachttarief uit
    trigger:
      - platform: time
        at: '21:00:00'
    condition:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    action:
      - service: switch.turn_off
        entity_id: switch.s20_control
      - service: switch.turn_off
        entity_id: switch.balco_1
      - service: switch.turn_off
        entity_id: switch.athom_car

automation switches_dagtarief_schakel_aan:
  - alias: sonoff switches nachttarief aan
    trigger:
      - platform: time
        at: '06:02:00'
    condition:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    action:
      - service: switch.turn_on
        entity_id: switch.s20_control
      - service: switch.turn_on
        entity_id: switch.balco_1
      - service: switch.turn_on
        entity_id: switch.athom_car

# music
automation bluetooth_on:
  - alias: 'turn bluetooth living on'
    trigger:
      platform: state
      entity_id: input_boolean.start_bluetooth_speaker
      from: 'off'
      to: 'on'
    action:
      - service: shell_command.music_bluetooth_connect
        data:
          message: "Make bluetooth connection"

automation bluetooth_pause:
  - alias: 'pause bluetooth speaker'
    trigger:
      platform: state
      entity_id: input_boolean.pause_bluetooth_speaker
      from: 'off'
      to: 'on'
    action:
      - service: shell_command.music_bluetooth_pause
        data:
          message: "pause bluetooth speaker"

automation bluetooth_resume:
  - alias: 'resume bluetooth speaker'
    trigger:
      platform: state
      entity_id: input_boolean.resume_bluetooth_speaker
      from: 'off'
      to: 'on'
    action:
      - service: shell_command.music_bluetooth_resume
        data:
          message: "resume bluetooth speaker"
# automation leaving_house:
#   alias: set temp low when leaving house
#   trigger:
#     platform: state
#     entity_id: device_tracker.7c_7d_3d_ba_ef_be
#     from: 'home'
#     to: 'not_home'
#   action:
#     service: shell_command.set_temp_low
#     data:
#       message: "Stijn left house: heating low"

# automation at_home_weekday:
#   alias: set temp high when being home workday
#   trigger:
#     platform: time_pattern
#     minutes: '/5'
#   condition:
#     condition: and
#     conditions:
#       - condition: time
#         after: '06:30:00'
#         before: '22:30:00'
#       - condition: state
#         entity_id: device_tracker.7c_7d_3d_ba_ef_be
#         state: 'home'
#       - condition: time
#         weekday:
#           - mon
#           - tue
#           - wed
#           - thu
#           - fri
#   action:
#     service: shell_command.set_temp_high
#     data:
#       message: "Stijn is home: heating high"

# automation at_home_weekend:
#   alias: set temp high when being home weekend
#   trigger:
#     platform: time_pattern
#     minutes: '/5'
#   condition:
#     condition: and
#     conditions:
#       - condition: time
#         after: '08:00:00'
#         before: '23:00:00'
#       - condition: state
#         entity_id: device_tracker.7c_7d_3d_ba_ef_be
#         state: 'home'
#       - condition: time
#         weekday:
#           - sat
#           - sun
#   action:
#     service: shell_command.set_temp_high
#     data:
#       message: "Stijn is home: heating high"

# automation sleep:
#   alias: sleep, turn heating down
#   trigger:
#     platform: time
#     at: '22:10:00'
#   condition:
#     - condition: time
#       weekday:
#         - mon
#         - tue
#         - wed
#         - thu
#         - sun
#   action:
#     service: shell_command.set_temp_low
#     data:
#       message: "sleeping, heating low"

automation sleep_:
  alias: sleep, turn heating down
  trigger:
    platform: time
    at: '22:10:00'
  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - sun
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.turn_heating_on

# automation wakeup_week:
#   alias: wakup, turn heating up weekday
#   trigger:
#     platform: time
#     at: '06:25:00'
#   condition:
#     - condition: time
#       weekday:
#         - mon
#         - tue
#         - wed
#         - thu
#         - fri
#   action:
#     service: shell_command.set_temp_high
#     data:
#       message: "wakeup, heating high"

# automation wakeup_satur:
#   alias: wakup, turn heating up saturday
#   trigger:
#     platform: time
#     at: '07:35:00'
#   condition:
#     - condition: time
#       weekday:
#         - sat
#   action:
#     service: shell_command.set_temp_high
#     data:
#       message: "wakeup, heating high"
#
# automation wakeup_sunday:
#   alias: wakup, turn heating up sunday
#   trigger:
#     platform: time
#     at: '08:00:00'
#   condition:
#     - condition: time
#       weekday:
#         - sun
#   action:
#     service: shell_command.set_temp_high
#     data:
#       message: "wakeup, heating high"

automation ebusreading:
  alias: read ebus
  trigger:
    platform: time_pattern
    minutes: '/5'
  action:
    service: shell_command.read_ebus
    data:
      message: "thermostat reading"


#NMAP is unreliable without scan_options
# device_tracker:
#   - platform: nmap_tracker
#     hosts: 192.168.0.1-254
#     consider_home: 600
#     interval_seconds: 180
#     scan_options: " -min-rtt-timeout 3s " #scan_options: " -min-rtt-timeout 3s --privileged -sP "

recorder:
 purge_keep_days: 15
 exclude:
   # domains:
   #   - automation
   entities:
     - sensor.br_wind_direction
     - sensor.br_symbol
     - sensor.br_rainchance_1d
     - sensor.br_rain_1d
     - sensor.br_precipitation_forecast_average
     - sensor.br_irradiance
     - sensor.br_detailed_condition
     - sensor.br_condition_code
     - media_player.living_main
     - media_player.kodi_libreelec_local
     - weather.home
     - zone.home
     - sun.sun
     - sensor.date_time_iso
     - media_player.kodi_libreelec_local
     - media_player.living_main
     - input_number.dummy_epaper
#group: !include groups.yaml
#automation: !include automations.yaml
#script: !include scripts.yaml
